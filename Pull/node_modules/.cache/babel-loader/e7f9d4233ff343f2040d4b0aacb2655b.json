{"ast":null,"code":"var _jsxFileName = \"E:\\\\Global\\\\node.react\\\\react repository\\\\react-way-of-samurai\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport { HashRouter, Route, withRouter } from \"react-router-dom\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport LoginPage from \"./components/Login/Login\";\nimport { connect, Provider } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { initializeApp } from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport store from \"./redux/redux-store\";\nimport { withSuspense } from \"./hoc/withSuspense\";\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.initializeApp();\n  }\n\n  render() {\n    if (!this.props.initialized) {\n      return React.createElement(Preloader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"app-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(HeaderContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"app-wrapper-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/dialogs\",\n      render: withSuspense(DialogsContainer),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/profile/:userId?\",\n      render: withSuspense(ProfileContainer),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/users\",\n      render: () => React.createElement(UsersContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/login\",\n      render: () => React.createElement(LoginPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  initialized: state.app.initialized\n});\n\nlet AppContainer = compose(withRouter, connect(mapStateToProps, {\n  initializeApp\n}))(App);\n\nconst SamuraiJSApp = props => {\n  return React.createElement(HashRouter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(AppContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })));\n};\n\nexport default SamuraiJSApp;","map":{"version":3,"sources":["E:/Global/node.react/react repository/react-way-of-samurai/src/App.js"],"names":["React","Component","Navbar","HashRouter","Route","withRouter","UsersContainer","HeaderContainer","LoginPage","connect","Provider","compose","initializeApp","Preloader","store","withSuspense","DialogsContainer","lazy","ProfileContainer","App","componentDidMount","props","render","initialized","mapStateToProps","state","app","AppContainer","SamuraiJSApp"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport {HashRouter, Route, withRouter} from \"react-router-dom\";\r\n\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport LoginPage from \"./components/Login/Login\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport store from \"./redux/redux-store\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\n\r\n\r\n\r\nclass App extends Component {\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader />\r\n        }\r\n\r\n        return (\r\n                    <div className='app-wrapper'>\r\n                        <HeaderContainer/>\r\n                        <Navbar/>\r\n                        <div className='app-wrapper-content'>\r\n                            <Route path='/dialogs'\r\n                                   render={withSuspense(DialogsContainer)}/>\r\n\r\n                            <Route path='/profile/:userId?'\r\n                                   render={withSuspense(ProfileContainer)} />\r\n\r\n                            <Route path='/users'\r\n                                   render={() => <UsersContainer/>}/>\r\n\r\n                            <Route path='/login'\r\n                                   render={() => <LoginPage/>}/>\r\n                        </div>\r\n                    </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nlet AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App);\r\n\r\nconst SamuraiJSApp = (props) => {\r\n   return <HashRouter >\r\n        <Provider store={store}>\r\n            <AppContainer />\r\n        </Provider>\r\n    </HashRouter>\r\n}\r\n\r\nexport default SamuraiJSApp;\r\n"]},"metadata":{},"sourceType":"module"}